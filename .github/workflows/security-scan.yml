name: Security Scan & Compliance Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4
      with:
        languages: go

    - name: Autobuild
      uses: github/codeql-action/autobuild@v4

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4

  gosec:
    name: Go Security Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Run GoSec
      run: |
        go install github.com/securego/gosec/v2/cmd/gosec@latest
        gosec -exclude-dir=tests -exclude-dir=demo -exclude-dir=docs ./...

  dependency-check:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Run govulncheck
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...

    - name: Upload dependency list
      uses: actions/upload-artifact@v4
      with:
        name: dependency-list
        path: |
          go.mod
          go.sum

  sast:
    name: Static Application Security Testing
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Semgrep
      uses: returntocorp/semgrep-action@v1

  container-scan:
    name: Container Image Security
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t relativistic-sdk:latest .

    - name: Run Trivy image scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'relativistic-sdk:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy results
      uses: github/codeql-action/upload-sarif@v4
      with:
        sarif_file: 'trivy-results.sarif'

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Gitleaks
      uses: gitleaks/gitleaks-action@v2.3.4
      with:
        config-path: .gitleaks.toml

  license-compliance:
    name: License Compliance
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check licenses
      run: |
        echo "Checking dependency licenses..."
        go mod download
        go list -m all | head -50 > dependencies.txt
        echo "Dependencies listed in dependencies.txt"

    - name: Upload dependencies
      uses: actions/upload-artifact@v4
      with:
        name: dependencies
        path: dependencies.txt
